server:
  port: 8082

spring:
  main:
    allow-bean-definition-overriding: true

  datasource:
    url: jdbc:postgresql://localhost:55000/logistica
    username: postgres
    password: postgrespw
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true

  kafka:
    bootstrap-servers: pkc-lq8v7.eu-central-1.aws.confluent.cloud:9092
    consumer:
      group-id: logistica-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  cloud:
    stream:
      bindings:
        # Consumidor do tópico "novo-pedido-topic" (Novos pedidos)
        novoPedidoConsumer-in-0:
          destination: novo-pedido-topic
          group: logistica-group
          content-type: application/json

        # Consumidor do tópico "estoque-insuficiente-topic" (Verificação de estoque)
        estoqueInsuficienteConsumer-in-0:
          destination: estoque-insuficiente-topic
          group: logistica-group
          content-type: application/json

        # Produtor do tópico "entrega-iniciada-topic" (Evento de entrega iniciada)
        entregaIniciadaProducer-out-0:
          destination: entrega-iniciada-topic
          content-type: application/json

        # Produtor do tópico "entrega-concluida-topic"
        entregaConcluidaProducer-out-0:
          destination: entrega-concluida-topic
          content-type: application/json

        # Produtor do tópico "status-entrega-topic" (Atualizações de entrega)
        statusEntregaProducer-out-0:
          destination: status-entrega-topic
          content-type: application/json

      kafka:
        binder:
          brokers: localhost:9092

  google:
    maps:
      api-key: ${GOOGLE_MAPS_API_KEY}
